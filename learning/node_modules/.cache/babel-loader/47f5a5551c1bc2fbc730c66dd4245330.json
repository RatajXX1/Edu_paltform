{"ast":null,"code":"var _jsxFileName = \"/Users/michalratajewski/edupage/files/learning/src/utilis/ProtectedRoute.js\";\nimport React, { useState } from \"react\";\nimport { Route, Navigate } from \"react-router-dom\";\nimport authorize from \"./authorize\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ProtectedRoute extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Logged: false,\n      user_data: null,\n      checked: false\n    };\n  }\n\n  componentDidMount() {\n    authorize.CheckAuthorize().then(data => {\n      if (data !== null) this.setState({\n        Logged: true,\n        user_data: data,\n        checked: true\n      });else this.setState({\n        Logged: false,\n        user_data: null,\n        checked: true\n      });\n    }).catch(() => {\n      this.setState({\n        Logged: false,\n        user_data: null,\n        checked: true\n      });\n    });\n  }\n\n  render() {\n    if (this.state.checked) {\n      if (this.state.Logged) {\n        return /*#__PURE__*/React.cloneElement(this.props.children, {\n          User_data: this.state.user_data\n        });\n      } else return /*#__PURE__*/_jsxDEV(Navigate, {\n        replace: true,\n        to: '/'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 28\n      }, this);\n    } else return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Autoryzacja w toku\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 24\n    }, this);\n  }\n\n} // export const ProtectedRoute = ({children, ...rest}) => {\n//\n//     const [data, setDate] = useState({Logged: false, user_data: null, checked: false})\n//\n//     authorize.CheckAuthorize().then(\n//         data => {\n//             if (data !== null) setDate({Logged: true, user_data: data, checked: true})\n//             else setDate({Logged: false, user_data: null, checked: true})\n//         }\n//     ).catch(() => {\n//         setDate({Logged: false, user_data: null, checked: true})\n//     })\n//\n//     if (data.checked) {\n//         if (data.Logged) {\n//             return (React.cloneElement(children, {User_data : data.user_data}))\n//         } else {\n//             return (\n//                 <Navigate replace to={'/'}/>\n//             )\n//         }\n//     } else return (<h1>Autoryzacja w toku</h1>)\n// }","map":{"version":3,"sources":["/Users/michalratajewski/edupage/files/learning/src/utilis/ProtectedRoute.js"],"names":["React","useState","Route","Navigate","authorize","ProtectedRoute","Component","constructor","props","state","Logged","user_data","checked","componentDidMount","CheckAuthorize","then","data","setState","catch","render","cloneElement","children","User_data"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA8B,kBAA9B;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,OAAO,MAAMC,cAAN,SAA6BL,KAAK,CAACM,SAAnC,CAA6C;AAEhDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,KADC;AAETC,MAAAA,SAAS,EAAE,IAFF;AAGTC,MAAAA,OAAO,EAAE;AAHA,KAAb;AAKH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBT,IAAAA,SAAS,CAACU,cAAV,GAA2BC,IAA3B,CACIC,IAAI,IAAI;AACJ,UAAIA,IAAI,KAAK,IAAb,EAAmB,KAAKC,QAAL,CAAc;AAACP,QAAAA,MAAM,EAAE,IAAT;AAAeC,QAAAA,SAAS,EAAEK,IAA1B;AAAgCJ,QAAAA,OAAO,EAAE;AAAzC,OAAd,EAAnB,KACK,KAAKK,QAAL,CAAc;AAACP,QAAAA,MAAM,EAAE,KAAT;AAAgBC,QAAAA,SAAS,EAAE,IAA3B;AAAiCC,QAAAA,OAAO,EAAE;AAA1C,OAAd;AACR,KAJL,EAKEM,KALF,CAKQ,MAAM;AACV,WAAKD,QAAL,CAAc;AAACP,QAAAA,MAAM,EAAE,KAAT;AAAgBC,QAAAA,SAAS,EAAE,IAA3B;AAAiCC,QAAAA,OAAO,EAAE;AAA1C,OAAd;AACH,KAPD;AAQH;;AAEDO,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKV,KAAL,CAAWG,OAAf,EAAwB;AACpB,UAAI,KAAKH,KAAL,CAAWC,MAAf,EAAuB;AACnB,4BAAQV,KAAK,CAACoB,YAAN,CAAmB,KAAKZ,KAAL,CAAWa,QAA9B,EAAwC;AAACC,UAAAA,SAAS,EAAG,KAAKb,KAAL,CAAWE;AAAxB,SAAxC,CAAR;AACH,OAFD,MAEO,oBAAQ,QAAC,QAAD;AAAU,QAAA,OAAO,MAAjB;AAAkB,QAAA,EAAE,EAAE;AAAtB;AAAA;AAAA;AAAA;AAAA,cAAR;AACV,KAJD,MAIO,oBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AACV;;AA7B+C,C,CAiCpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, {useState} from \"react\";\nimport {Route, Navigate} from \"react-router-dom\";\nimport authorize from \"./authorize\";\n\nexport class ProtectedRoute extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            Logged: false,\n            user_data: null,\n            checked: false\n        }\n    }\n    \n    componentDidMount() {\n        authorize.CheckAuthorize().then(\n            data => {\n                if (data !== null) this.setState({Logged: true, user_data: data, checked: true})\n                else this.setState({Logged: false, user_data: null, checked: true})\n            }\n        ).catch(() => {\n            this.setState({Logged: false, user_data: null, checked: true})\n        })\n    }\n\n    render() {\n        if (this.state.checked) {\n            if (this.state.Logged) {\n                return (React.cloneElement(this.props.children, {User_data : this.state.user_data}))\n            } else return (<Navigate replace to={'/'}/>)\n        } else return (<h1>Autoryzacja w toku</h1>)\n    }\n\n}\n\n// export const ProtectedRoute = ({children, ...rest}) => {\n//\n//     const [data, setDate] = useState({Logged: false, user_data: null, checked: false})\n//\n//     authorize.CheckAuthorize().then(\n//         data => {\n//             if (data !== null) setDate({Logged: true, user_data: data, checked: true})\n//             else setDate({Logged: false, user_data: null, checked: true})\n//         }\n//     ).catch(() => {\n//         setDate({Logged: false, user_data: null, checked: true})\n//     })\n//\n//     if (data.checked) {\n//         if (data.Logged) {\n//             return (React.cloneElement(children, {User_data : data.user_data}))\n//         } else {\n//             return (\n//                 <Navigate replace to={'/'}/>\n//             )\n//         }\n//     } else return (<h1>Autoryzacja w toku</h1>)\n// }"]},"metadata":{},"sourceType":"module"}