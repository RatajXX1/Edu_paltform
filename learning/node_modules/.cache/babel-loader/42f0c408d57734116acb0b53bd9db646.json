{"ast":null,"code":"var _jsxFileName = \"/Users/michalratajewski/edupage/files/learning/src/utilis/ProtectedRoute.js\";\nimport React from \"react\";\nimport { Route, Navigate } from \"react-router-dom\";\nimport authorize from \"./authorize\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProtectedRoute = _ref => {\n  let {\n    Component: Component,\n    ...Rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, { ...Rest,\n    element: props => {\n      if (true) {\n        return /*#__PURE__*/_jsxDEV(Component, { ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 28\n        }, this);\n      } else {\n        /*#__PURE__*/\n        _jsxDEV(Navigate, {\n          to: '/'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this);\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n_c = ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["/Users/michalratajewski/edupage/files/learning/src/utilis/ProtectedRoute.js"],"names":["React","Route","Navigate","authorize","ProtectedRoute","Component","Rest","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA8B,kBAA9B;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,OAAO,MAAMC,cAAc,GAAG,QAAqC;AAAA,MAApC;AAACC,IAAAA,SAAS,EAAEA,SAAZ;AAAuB,OAAGC;AAA1B,GAAoC;AAC/D,sBACI,QAAC,KAAD,OACQA,IADR;AAEI,IAAA,OAAO,EAAEC,KAAK,IAAI;AACd,UAAI,IAAJ,EAAU;AACN,4BAAO,QAAC,SAAD,OAAeA;AAAf;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFD,MAEO;AACH;AAAA,gBAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA;AACH;AACJ;AARL;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAbM;KAAMH,c","sourcesContent":["import React from \"react\";\nimport {Route, Navigate} from \"react-router-dom\";\nimport authorize from \"./authorize\";\n\nexport const ProtectedRoute = ({Component: Component, ...Rest}) => {\n    return (\n        <Route\n            {...Rest}\n            element={props => {\n                if (true) {\n                    return <Component {...props} />\n                } else {\n                    <Navigate to={'/'} />\n                }\n            }}\n        />\n    )\n}"]},"metadata":{},"sourceType":"module"}