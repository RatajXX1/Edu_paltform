{"ast":null,"code":"import crypto from \"./crypto\";\nimport serverPath from \"./server-path\";\nexport default {\n  async authorize(login_input, password_input) {\n    let auto_login = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    try {\n      password_input = await crypto.sha256(password_input);\n      const resp = await fetch(serverPath() + 'api/auth/login.php', {\n        method: 'POST',\n        headers: {\n          'Access-Control-Allow-Origin': '*',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          login: login_input,\n          password: password_input,\n          Auto_login: auto_login\n        }),\n        credentials: 'include'\n      }).then(data => data.json()).catch(null);\n\n      if (resp !== null) {\n        if (resp[\"CODE\"] === 'OK') {\n          window.sessionStorage.setItem('Token', resp['Token']);\n          return true;\n        } else {\n          return false;\n        }\n      } else return false;\n    } catch (e) {\n      return false;\n    }\n  },\n\n  async register(login_input, password_input, name_input, surrname_input) {\n    try {\n      password_input = await crypto.sha256(password_input);\n      const resp = await fetch(serverPath() + 'api/auth/register.php', {\n        method: 'POST',\n        headers: {\n          'Access-Control-Allow-Origin': '*',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          Name: name_input,\n          Surrname: surrname_input,\n          login: login_input,\n          password: password_input\n        }),\n        credentials: 'include'\n      }).then(data => data.json()).catch(null);\n\n      if (resp !== null) {\n        if (resp[\"CODE\"] === 'OK') {\n          window.sessionStorage.setItem('Token', resp['Token']);\n          return true;\n        } else {\n          return false;\n        }\n      } else return false;\n    } catch (e) {\n      return false;\n    }\n  },\n\n  async CheckAuthorize() {\n    try {\n      const resp = await fetch(serverPath() + 'api/auth/authorize.php', {\n        method: 'GET',\n        headers: {\n          'Access-Control-Allow-Origin': '*'\n        },\n        credentials: 'include'\n      }).then(data => data.json()).catch(null);\n\n      if (resp !== null) {\n        if (resp['CODE'] === 'OK') {\n          return resp['DATA'];\n        } else return null;\n      } else return null;\n    } catch (e) {\n      return null;\n    }\n  },\n\n  isAuthorized(AuthorizedState) {\n    if (!AuthorizedState) {\n      if (window.location.pathname !== '/') window.location.href = '/';\n    }\n  }\n\n};","map":{"version":3,"sources":["/Users/michalratajewski/edupage/files/learning/src/utilis/authorize.js"],"names":["crypto","serverPath","authorize","login_input","password_input","auto_login","sha256","resp","fetch","method","headers","body","JSON","stringify","login","password","Auto_login","credentials","then","data","json","catch","window","sessionStorage","setItem","e","register","name_input","surrname_input","Name","Surrname","CheckAuthorize","isAuthorized","AuthorizedState","location","pathname","href"],"mappings":"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","sourcesContent":["import crypto from \"./crypto\";\nimport serverPath from \"./server-path\";\n\nexport default {\n\n    async authorize(login_input, password_input, auto_login = false) {\n        try {\n            password_input = await crypto.sha256(password_input)\n            const resp = await fetch(serverPath() + 'api/auth/login.php', {\n                method: 'POST',\n                headers: {\n                    'Access-Control-Allow-Origin':'*',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    login: login_input,\n                    password: password_input,\n                    Auto_login: auto_login\n                }),\n                credentials: 'include'\n            }).then(data => data.json()).catch(null)\n\n            if (resp !== null) {\n                if (resp[\"CODE\"] === 'OK') {\n                    window.sessionStorage.setItem('Token', resp['Token'])\n                    return true\n                } else {\n                    return false\n                }\n            } else return false;\n        } catch (e) {\n            return false\n        }\n    },\n\n    async register(login_input, password_input, name_input, surrname_input) {\n        try {\n            password_input = await crypto.sha256(password_input)\n            const resp = await fetch(serverPath() + 'api/auth/register.php', {\n                method: 'POST',\n                headers: {\n                    'Access-Control-Allow-Origin':'*',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    Name: name_input,\n                    Surrname: surrname_input,\n                    login: login_input,\n                    password: password_input,\n                }),\n                credentials: 'include'\n            }).then(data => data.json()).catch(null)\n\n            if (resp !== null) {\n                if (resp[\"CODE\"] === 'OK') {\n                    window.sessionStorage.setItem('Token', resp['Token'])\n                    return true\n                } else {\n                    return false\n                }\n            } else return false;\n        } catch (e) {\n            return false\n        }\n    },\n\n    async CheckAuthorize() {\n        try {\n            const resp = await fetch(serverPath() + 'api/auth/authorize.php', {\n                method: 'GET',\n                headers: {\n                    'Access-Control-Allow-Origin':'*'\n                },\n                credentials: 'include'\n            }).then(data => data.json()).catch(null)\n            if (resp !== null) {\n                if (resp['CODE'] === 'OK') {\n                    return resp['DATA']\n                } else return null\n            } else return null\n        } catch (e) {\n            return null\n        }\n    },\n\n    isAuthorized(AuthorizedState) {\n        if (!AuthorizedState) {\n            if (window.location.pathname !== '/') window.location.href = '/'\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}