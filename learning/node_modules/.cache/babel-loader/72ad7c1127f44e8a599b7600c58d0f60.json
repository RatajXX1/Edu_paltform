{"ast":null,"code":"/*\n* Notiflix Confirm AIO (https://notiflix.github.io)\n* Description: This file has been created automatically that using \"notiflix.js\", and \"notiflix.css\" files.\n* Version: 3.2.5\n* Author: Furkan MT (https://github.com/furcan)\n* Copyright 2019 - 2022 Notiflix, MIT Licence (https://opensource.org/licenses/MIT)\n*/\n\n/* global define */\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], function () {\n      return factory(root);\n    });\n  } else if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = factory(root);\n  } else {\n    root.Notiflix = factory(root);\n  }\n})(typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : this, function (window) {\n  'use strict'; // COMMON: SSR check: begin\n\n  if (typeof window === 'undefined' && typeof window.document === 'undefined') {\n    return false;\n  } // COMMON: SSR check: end\n  // COMMON: Variables: begin\n\n\n  var notiflixNamespace = 'Notiflix';\n  var notiflixConsoleDocs = '\\n\\nVisit documentation page to learn more: https://notiflix.github.io/documentation';\n  var defaultFontFamily = '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif'; // COMMON: Variables: end\n  // CONFIRM: Default Settings: begin\n\n  var typesConfirm = {\n    Show: 'Show',\n    Ask: 'Ask',\n    Prompt: 'Prompt'\n  };\n  var newConfirmSettings;\n  var confirmSettings = {\n    ID: 'NotiflixConfirmWrap',\n    // can not customizable\n    className: 'notiflix-confirm',\n    width: '300px',\n    zindex: 4003,\n    position: 'center',\n    // 'center' - 'center-top' - 'center-bottom' - 'right-top' - 'right-center' - 'right-bottom' - 'left-top' - 'left-center' - 'left-bottom'\n    distance: '10px',\n    backgroundColor: '#f8f8f8',\n    borderRadius: '25px',\n    backOverlay: true,\n    backOverlayColor: 'rgba(0,0,0,0.5)',\n    rtl: false,\n    fontFamily: 'Quicksand',\n    cssAnimation: true,\n    cssAnimationDuration: 300,\n    cssAnimationStyle: 'fade',\n    // 'zoom' - 'fade'\n    plainText: true,\n    titleColor: '#32c682',\n    titleFontSize: '16px',\n    titleMaxLength: 34,\n    messageColor: '#1e1e1e',\n    messageFontSize: '14px',\n    messageMaxLength: 110,\n    buttonsFontSize: '15px',\n    buttonsMaxLength: 34,\n    okButtonColor: '#f8f8f8',\n    okButtonBackground: '#32c682',\n    cancelButtonColor: '#f8f8f8',\n    cancelButtonBackground: '#a9a9a9'\n  }; // CONFIRM: Default Settings: end\n  // COMMON: Console Error: begin\n\n  var commonConsoleError = function (message) {\n    return console.error('%c ' + notiflixNamespace + ' Error ', 'padding:2px;border-radius:20px;color:#fff;background:#ff5549', '\\n' + message + notiflixConsoleDocs);\n  }; // COMMON: Console Error: end\n  // COMMON: Check Head or Body: begin\n\n\n  var commonCheckHeadOrBody = function (element) {\n    if (!element) {\n      element = 'head';\n    }\n\n    if (window.document[element] === null) {\n      commonConsoleError('\\nNotiflix needs to be appended to the \"<' + element + '>\" element, but you called it before the \"<' + element + '>\" element has been created.');\n      return false;\n    }\n\n    return true;\n  }; // COMMON: Check Head or Body: end\n  // COMMON: Set Internal CSS Codes: begin\n\n\n  var commonSetInternalCSSCodes = function (getInternalCSSCodes, styleElementId) {\n    // check doc head\n    if (!commonCheckHeadOrBody('head')) {\n      return false;\n    } // internal css\n\n\n    if (getInternalCSSCodes() !== null && !window.document.getElementById(styleElementId)) {\n      var internalCSS = window.document.createElement('style');\n      internalCSS.id = styleElementId;\n      internalCSS.innerHTML = getInternalCSSCodes();\n      window.document.head.appendChild(internalCSS);\n    }\n  }; // COMMON: Set Internal CSS Codes: end\n  // COMMON: Extend Options: begin\n\n\n  var commonExtendOptions = function () {\n    // variables\n    var extended = {};\n    var deep = false;\n    var i = 0; // check if a deep merge\n\n    if (Object.prototype.toString.call(arguments[0]) === '[object Boolean]') {\n      deep = arguments[0];\n      i++;\n    } // merge the object into the extended object\n\n\n    var merge = function (obj) {\n      for (var prop in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n          // if property is an object, merge properties\n          if (deep && Object.prototype.toString.call(obj[prop]) === '[object Object]') {\n            extended[prop] = commonExtendOptions(extended[prop], obj[prop]);\n          } else {\n            extended[prop] = obj[prop];\n          }\n        }\n      }\n    }; // loop through each object and conduct a merge\n\n\n    for (; i < arguments.length; i++) {\n      merge(arguments[i]);\n    }\n\n    return extended;\n  }; // COMMON: Extend Options: end\n  // COMMON: Get Plaintext: begin\n\n\n  var commonGetPlaintext = function (html) {\n    var htmlPool = window.document.createElement('div');\n    htmlPool.innerHTML = html;\n    return htmlPool.textContent || htmlPool.innerText || '';\n  }; // COMMON: Get Plaintext: end\n  // CONFIRM: Get Internal CSS Codes: begin\n\n\n  var confirmGetInternalCSSCodes = function () {\n    var confirmCSS = '[id^=NotiflixConfirmWrap]{position:fixed;z-index:4003;width:100%;height:100%;left:0;top:0;padding:10px;-webkit-box-sizing:border-box;box-sizing:border-box;background:transparent;font-family:\"Quicksand\",-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}[id^=NotiflixConfirmWrap].nx-position-center-top{-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}[id^=NotiflixConfirmWrap].nx-position-center-bottom{-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}[id^=NotiflixConfirmWrap].nx-position-left-top{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}[id^=NotiflixConfirmWrap].nx-position-left-center{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start}[id^=NotiflixConfirmWrap].nx-position-left-bottom{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}[id^=NotiflixConfirmWrap].nx-position-right-top{-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;align-items:flex-end;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}[id^=NotiflixConfirmWrap].nx-position-right-center{-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;align-items:flex-end}[id^=NotiflixConfirmWrap].nx-position-right-bottom{-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;align-items:flex-end;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}[id^=NotiflixConfirmWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixConfirmWrap]>div[class*=\"-overlay\"]{width:100%;height:100%;left:0;top:0;background:rgba(255,255,255,.5);position:fixed;z-index:0}[id^=NotiflixConfirmWrap]>div[class*=\"-overlay\"].nx-with-animation{-webkit-animation:confirm-overlay-animation .3s ease-in-out 0s normal;animation:confirm-overlay-animation .3s ease-in-out 0s normal}@-webkit-keyframes confirm-overlay-animation{0%{opacity:0}100%{opacity:1}}@keyframes confirm-overlay-animation{0%{opacity:0}100%{opacity:1}}[id^=NotiflixConfirmWrap].nx-remove>div[class*=\"-overlay\"].nx-with-animation{opacity:0;-webkit-animation:confirm-overlay-animation-remove .3s ease-in-out 0s normal;animation:confirm-overlay-animation-remove .3s ease-in-out 0s normal}@-webkit-keyframes confirm-overlay-animation-remove{0%{opacity:1}100%{opacity:0}}@keyframes confirm-overlay-animation-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]{width:300px;max-width:100%;max-height:96vh;overflow-x:hidden;overflow-y:auto;border-radius:25px;padding:10px;margin:0;-webkit-filter:drop-shadow(0 0 5px rgba(0,0,0,0.05));filter:drop-shadow(0 0 5px rgba(0, 0, 0, .05));background:#f8f8f8;color:#1e1e1e;position:relative;z-index:1;text-align:center}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]::-webkit-scrollbar{width:0;height:0}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]::-webkit-scrollbar-thumb{background:transparent}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]::-webkit-scrollbar-track{background:transparent}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]{float:left;width:100%;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]>h5{float:left;width:100%;margin:0;padding:0 0 10px;border-bottom:1px solid rgba(0,0,0,.1);color:#32c682;font-family:inherit!important;font-size:16px;line-height:1.4;font-weight:500;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]>div{font-family:inherit!important;margin:15px 0 20px;padding:0 10px;float:left;width:100%;font-size:14px;line-height:1.4;font-weight:normal;color:inherit;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]>div>div{font-family:inherit!important;float:left;width:100%;margin:15px 0 0;padding:0}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]>div>div>input{font-family:inherit!important;float:left;width:100%;height:40px;margin:0;padding:0 15px;border:1px solid rgba(0,0,0,.1);border-radius:25px;font-size:14px;font-weight:normal;line-height:1;-webkit-transition:all .25s ease-in-out;-o-transition:all .25s ease-in-out;transition:all .25s ease-in-out;text-align:left}[id^=NotiflixConfirmWrap].nx-rtl-on>div[class*=\"-content\"]>div[class*=\"-head\"]>div>div>input{text-align:right}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]>div>div>input:hover{border-color:rgba(0,0,0,.1)}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]>div>div>input:focus{border-color:rgba(0,0,0,.3)}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]>div>div>input.nx-validation-failure{border-color:#ff5549}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]>div>div>input.nx-validation-success{border-color:#32c682}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-buttons\"]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;border-radius:inherit;float:left;width:100%;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-buttons\"]>a{cursor:pointer;font-family:inherit!important;-webkit-transition:all .25s ease-in-out;-o-transition:all .25s ease-in-out;transition:all .25s ease-in-out;float:left;width:48%;padding:9px 5px;border-radius:inherit!important;font-weight:500;font-size:15px;line-height:1.4;color:#f8f8f8;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-buttons\"]>a.nx-confirm-button-ok{margin:0 2% 0 0;background:#32c682}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-buttons\"]>a.nx-confirm-button-cancel{margin:0 0 0 2%;background:#a9a9a9}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-buttons\"]>a.nx-full{margin:0;width:100%}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-buttons\"]>a:hover{-webkit-box-shadow:inset 0 -60px 5px -5px rgba(0,0,0,.25);box-shadow:inset 0 -60px 5px -5px rgba(0,0,0,.25)}[id^=NotiflixConfirmWrap].nx-rtl-on>div[class*=\"-content\"]>div[class*=\"-buttons\"],[id^=NotiflixConfirmWrap].nx-rtl-on>div[class*=\"-content\"]>div[class*=\"-buttons\"]>a{-webkit-transform:rotateY(180deg);transform:rotateY(180deg)}[id^=NotiflixConfirmWrap].nx-with-animation.nx-fade>div[class*=\"-content\"]{-webkit-animation:confirm-animation-fade .3s ease-in-out 0s normal;animation:confirm-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes confirm-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixConfirmWrap].nx-with-animation.nx-zoom>div[class*=\"-content\"]{-webkit-animation:confirm-animation-zoom .3s ease-in-out 0s normal;animation:confirm-animation-zoom .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-zoom{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}@keyframes confirm-animation-zoom{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}[id^=NotiflixConfirmWrap].nx-with-animation.nx-fade.nx-remove>div[class*=\"-content\"]{opacity:0;-webkit-animation:confirm-animation-fade-remove .3s ease-in-out 0s normal;animation:confirm-animation-fade-remove .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-fade-remove{0%{opacity:1}100%{opacity:0}}@keyframes confirm-animation-fade-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixConfirmWrap].nx-with-animation.nx-zoom.nx-remove>div[class*=\"-content\"]{opacity:0;-webkit-animation:confirm-animation-zoom-remove .3s ease-in-out 0s normal;animation:confirm-animation-zoom-remove .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-zoom-remove{0%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}50%{opacity:.5;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:0;-webkit-transform:scale(0);transform:scale(0)}}@keyframes confirm-animation-zoom-remove{0%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}50%{opacity:.5;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:0;-webkit-transform:scale(0);transform:scale(0)}}';\n    return confirmCSS || null;\n  }; // CONFIRM: Get Internal CSS Codes: end\n  // CONFIRM: Create: begin\n\n\n  var confirmCreate = function (confirmType, title, messageOrQuestion, answer, okButtonText, cancelButtonText, okButtonCallback, cancelButtonCallback, options) {\n    // check doc body\n    if (!commonCheckHeadOrBody('body')) {\n      return false;\n    } // if not initialized pretend like init\n\n\n    if (!newConfirmSettings) {\n      Notiflix.Confirm.init({});\n    } // create a backup for new settings\n\n\n    var newConfirmSettingsBackup = commonExtendOptions(true, newConfirmSettings, {}); // check the \"options\": begin\n\n    if (typeof options === 'object' && !Array.isArray(options)) {\n      // extend new settings with the new options\n      newConfirmSettings = commonExtendOptions(true, newConfirmSettings, options);\n    } // check the \"options\": end\n    // check the arguments: begin\n\n\n    if (typeof title !== 'string') {\n      title = 'Notiflix Confirm';\n    }\n\n    if (typeof messageOrQuestion !== 'string') {\n      messageOrQuestion = 'Do you agree with me?';\n    }\n\n    if (typeof okButtonText !== 'string') {\n      okButtonText = 'Yes';\n    }\n\n    if (typeof cancelButtonText !== 'string') {\n      cancelButtonText = 'No';\n    }\n\n    if (typeof okButtonCallback !== 'function') {\n      okButtonCallback = undefined;\n    }\n\n    if (typeof cancelButtonCallback !== 'function') {\n      cancelButtonCallback = undefined;\n    } // check the arguments: end\n    // if plainText is true => HTML tags not allowed: begin\n\n\n    if (newConfirmSettings.plainText) {\n      title = commonGetPlaintext(title);\n      messageOrQuestion = commonGetPlaintext(messageOrQuestion);\n      okButtonText = commonGetPlaintext(okButtonText);\n      cancelButtonText = commonGetPlaintext(cancelButtonText);\n    } // if plainText is true => HTML tags not allowed: end\n    // if plainText is false but the contents length more than ***MaxLength => Possible HTML tags error: begin\n\n\n    if (!newConfirmSettings.plainText) {\n      if (title.length > newConfirmSettings.titleMaxLength) {\n        title = 'Possible HTML Tags Error';\n        messageOrQuestion = 'The \"plainText\" option is \"false\" and the title content length is more than \"titleMaxLength\" option.';\n        okButtonText = 'Okay';\n        cancelButtonText = '...';\n      }\n\n      if (messageOrQuestion.length > newConfirmSettings.messageMaxLength) {\n        title = 'Possible HTML Tags Error';\n        messageOrQuestion = 'The \"plainText\" option is \"false\" and the message content length is more than \"messageMaxLength\" option.';\n        okButtonText = 'Okay';\n        cancelButtonText = '...';\n      }\n\n      if ((okButtonText.length || cancelButtonText.length) > newConfirmSettings.buttonsMaxLength) {\n        title = 'Possible HTML Tags Error';\n        messageOrQuestion = 'The \"plainText\" option is \"false\" and the buttons content length is more than \"buttonsMaxLength\" option.';\n        okButtonText = 'Okay';\n        cancelButtonText = '...';\n      }\n    } // if plainText is false but the contents length more than ***MaxLength => Possible HTML tags error: end\n    // max length: begin\n\n\n    if (title.length > newConfirmSettings.titleMaxLength) {\n      title = title.substring(0, newConfirmSettings.titleMaxLength) + '...';\n    }\n\n    if (messageOrQuestion.length > newConfirmSettings.messageMaxLength) {\n      messageOrQuestion = messageOrQuestion.substring(0, newConfirmSettings.messageMaxLength) + '...';\n    }\n\n    if (okButtonText.length > newConfirmSettings.buttonsMaxLength) {\n      okButtonText = okButtonText.substring(0, newConfirmSettings.buttonsMaxLength) + '...';\n    }\n\n    if (cancelButtonText.length > newConfirmSettings.buttonsMaxLength) {\n      cancelButtonText = cancelButtonText.substring(0, newConfirmSettings.buttonsMaxLength) + '...';\n    } // max length: end\n    // if cssAnimaion is false => duration: begin\n\n\n    if (!newConfirmSettings.cssAnimation) {\n      newConfirmSettings.cssAnimationDuration = 0;\n    } // if cssAnimaion is false => duration: end\n    // confirm wrap: begin\n\n\n    var ntflxConfirmWrap = window.document.createElement('div');\n    ntflxConfirmWrap.id = confirmSettings.ID;\n    ntflxConfirmWrap.className = newConfirmSettings.className + (newConfirmSettings.cssAnimation ? ' nx-with-animation nx-' + newConfirmSettings.cssAnimationStyle : '');\n    ntflxConfirmWrap.style.zIndex = newConfirmSettings.zindex;\n    ntflxConfirmWrap.style.padding = newConfirmSettings.distance; // rtl: begin\n\n    if (newConfirmSettings.rtl) {\n      ntflxConfirmWrap.setAttribute('dir', 'rtl');\n      ntflxConfirmWrap.classList.add('nx-rtl-on');\n    } // rtl: end\n    // position: begin\n\n\n    var confirmPosition = typeof newConfirmSettings.position === 'string' ? newConfirmSettings.position.trim() : 'center';\n    ntflxConfirmWrap.classList.add('nx-position-' + confirmPosition); // position: end\n    // font-family\n\n    ntflxConfirmWrap.style.fontFamily = '\"' + newConfirmSettings.fontFamily + '\", ' + defaultFontFamily; // if background overlay is true: begin\n\n    var confirmOverlay = '';\n\n    if (newConfirmSettings.backOverlay) {\n      confirmOverlay = '<div class=\"' + newConfirmSettings.className + '-overlay' + (newConfirmSettings.cssAnimation ? ' nx-with-animation' : '') + '\" style=\"background:' + newConfirmSettings.backOverlayColor + ';animation-duration:' + newConfirmSettings.cssAnimationDuration + 'ms;\"></div>';\n    } // if background overlay is true: end\n    // if have a callback => add cancel button: begin\n\n\n    var cancelButtonHTML = '';\n\n    if (typeof okButtonCallback === 'function') {\n      cancelButtonHTML = '<a id=\"NXConfirmButtonCancel\" class=\"nx-confirm-button-cancel\" style=\"color:' + newConfirmSettings.cancelButtonColor + ';background:' + newConfirmSettings.cancelButtonBackground + ';font-size:' + newConfirmSettings.buttonsFontSize + ';\">' + cancelButtonText + '</a>';\n    } // if have a callback => add cancel button: end\n    // check the validation module: begin\n\n\n    var setValidationInput = '';\n    var theExpectedAnswer = null;\n    var theClientAnswer = undefined;\n\n    if (confirmType === typesConfirm.Ask || confirmType === typesConfirm.Prompt) {\n      theExpectedAnswer = answer || '';\n      var inputMaxLength = confirmType === typesConfirm.Ask ? Math.ceil(theExpectedAnswer.length * 1.5) : theExpectedAnswer.length > 200 ? Math.ceil(theExpectedAnswer.length * 1.5) : 250;\n      var inputDefaultValueAttr = confirmType === typesConfirm.Prompt ? 'value=\"' + theExpectedAnswer + '\"' : '';\n      setValidationInput = '<div><input id=\"NXConfirmValidationInput\" type=\"text\" ' + inputDefaultValueAttr + ' maxlength=\"' + inputMaxLength + '\" style=\"font-size:' + newConfirmSettings.messageFontSize + ';border-radius: ' + newConfirmSettings.borderRadius + ';\" autocomplete=\"off\" spellcheck=\"false\" autocapitalize=\"none\" /></div>';\n    } // check the validation module: end\n    // confirm wrap content: begin\n\n\n    ntflxConfirmWrap.innerHTML = confirmOverlay + '<div class=\"' + newConfirmSettings.className + '-content\" style=\"width:' + newConfirmSettings.width + '; background:' + newConfirmSettings.backgroundColor + '; animation-duration:' + newConfirmSettings.cssAnimationDuration + 'ms; border-radius: ' + newConfirmSettings.borderRadius + ';\">' + '<div class=\"' + newConfirmSettings.className + '-head\">' + '<h5 style=\"color:' + newConfirmSettings.titleColor + ';font-size:' + newConfirmSettings.titleFontSize + ';\">' + title + '</h5>' + '<div style=\"color:' + newConfirmSettings.messageColor + ';font-size:' + newConfirmSettings.messageFontSize + ';\">' + messageOrQuestion + setValidationInput + '</div>' + '</div>' + '<div class=\"' + newConfirmSettings.className + '-buttons\">' + '<a id=\"NXConfirmButtonOk\" class=\"nx-confirm-button-ok' + (typeof okButtonCallback === 'function' ? '' : ' nx-full') + '\" style=\"color:' + newConfirmSettings.okButtonColor + ';background:' + newConfirmSettings.okButtonBackground + ';font-size:' + newConfirmSettings.buttonsFontSize + ';\">' + okButtonText + '</a>' + cancelButtonHTML + '</div>' + '</div>'; // confirm wrap content: end\n    // confirm wrap: end\n    // if there is no confirm box: begin\n\n    if (!window.document.getElementById(ntflxConfirmWrap.id)) {\n      window.document.body.appendChild(ntflxConfirmWrap); // buttons && input listener: begin\n\n      var confirmCloseWrap = window.document.getElementById(ntflxConfirmWrap.id);\n      var okButton = window.document.getElementById('NXConfirmButtonOk'); // validation input listener: begin\n\n      var validationInput = window.document.getElementById('NXConfirmValidationInput');\n\n      if (validationInput) {\n        validationInput.focus();\n        validationInput.setSelectionRange(0, (validationInput.value || '').length);\n        validationInput.addEventListener('keyup', function (event) {\n          var thisValue = event.target.value;\n\n          if (confirmType === typesConfirm.Ask && thisValue !== theExpectedAnswer) {\n            event.preventDefault();\n            validationInput.classList.add('nx-validation-failure');\n            validationInput.classList.remove('nx-validation-success');\n          } else {\n            if (confirmType === typesConfirm.Ask) {\n              validationInput.classList.remove('nx-validation-failure');\n              validationInput.classList.add('nx-validation-success');\n            }\n\n            var isEnter = (event.key || '').toLocaleLowerCase('en') === 'enter' || event.keyCode === 13;\n\n            if (isEnter) {\n              okButton.dispatchEvent(new Event('click'));\n            }\n          }\n        });\n      } // validation input listener: end\n      // ok button listener: begin\n\n\n      okButton.addEventListener('click', function (event) {\n        // check the answer if the type is \"Ask\": begin\n        if (confirmType === typesConfirm.Ask && theExpectedAnswer && validationInput) {\n          var inputValue = (validationInput.value || '').toString();\n\n          if (inputValue !== theExpectedAnswer) {\n            validationInput.focus();\n            validationInput.classList.add('nx-validation-failure');\n            event.stopPropagation();\n            event.preventDefault();\n            event.returnValue = false;\n            event.cancelBubble = true;\n            return false;\n          } else {\n            validationInput.classList.remove('nx-validation-failure');\n          }\n        } // check the answer if the type is \"Ask\": end\n        // if ok callback && if ok callback is a function\n\n\n        if (typeof okButtonCallback === 'function') {\n          if (confirmType === typesConfirm.Prompt && validationInput) {\n            theClientAnswer = validationInput.value || '';\n          }\n\n          okButtonCallback(theClientAnswer);\n        }\n\n        confirmCloseWrap.classList.add('nx-remove');\n        var timeout = setTimeout(function () {\n          if (confirmCloseWrap.parentNode !== null) {\n            confirmCloseWrap.parentNode.removeChild(confirmCloseWrap);\n            clearTimeout(timeout);\n          }\n        }, newConfirmSettings.cssAnimationDuration);\n      }); // ok button listener: end\n      // if ok callback && if ok callback a function => add Cancel Button listener: begin\n\n      if (typeof okButtonCallback === 'function') {\n        // cancel button listener: begin\n        var cancelButton = window.document.getElementById('NXConfirmButtonCancel');\n        cancelButton.addEventListener('click', function () {\n          // if cancel callback && if cancel callback a function\n          if (typeof cancelButtonCallback === 'function') {\n            if (confirmType === typesConfirm.Prompt && validationInput) {\n              theClientAnswer = validationInput.value || '';\n            }\n\n            cancelButtonCallback(theClientAnswer);\n          }\n\n          confirmCloseWrap.classList.add('nx-remove');\n          var timeout = setTimeout(function () {\n            if (confirmCloseWrap.parentNode !== null) {\n              confirmCloseWrap.parentNode.removeChild(confirmCloseWrap);\n              clearTimeout(timeout);\n            }\n          }, newConfirmSettings.cssAnimationDuration);\n        }); // cancel button listener: end\n      } // if ok callback && if ok callback a function => add Cancel Button listener: end\n      // buttons && input listener: end\n\n    } // if there is no confirm box: end\n    // extend new settings with the backup settings\n\n\n    newConfirmSettings = commonExtendOptions(true, newConfirmSettings, newConfirmSettingsBackup);\n  }; // CONFIRM: Create: end\n\n\n  var Notiflix = {\n    Confirm: {\n      // Init\n      init: function (userConfirmOptions) {\n        // extend options\n        newConfirmSettings = commonExtendOptions(true, confirmSettings, userConfirmOptions); // internal css if exist\n\n        commonSetInternalCSSCodes(confirmGetInternalCSSCodes, 'NotiflixConfirmInternalCSS');\n      },\n      // Merge First Init\n      merge: function (userConfirmExtendOptions) {\n        // if initialized already\n        if (newConfirmSettings) {\n          newConfirmSettings = commonExtendOptions(true, newConfirmSettings, userConfirmExtendOptions);\n        } // initialize first\n        else {\n          commonConsoleError('You have to initialize the Confirm module before call Merge function.');\n          return false;\n        }\n      },\n      // Show\n      show: function (title, message, okButtonText, cancelButtonText, okButtonCallback, cancelButtonCallback, options) {\n        confirmCreate(typesConfirm.Show, title, message, null, okButtonText, cancelButtonText, okButtonCallback, cancelButtonCallback, options);\n      },\n      // Ask\n      ask: function (title, question, answer, okButtonText, cancelButtonText, okButtonCallback, cancelButtonCallback, options) {\n        confirmCreate(typesConfirm.Ask, title, question, answer, okButtonText, cancelButtonText, okButtonCallback, cancelButtonCallback, options);\n      },\n      // Prompt\n      prompt: function (title, question, defaultAnswer, okButtonText, cancelButtonText, okButtonCallback, cancelButtonCallback, options) {\n        confirmCreate(typesConfirm.Prompt, title, question, defaultAnswer, okButtonText, cancelButtonText, okButtonCallback, cancelButtonCallback, options);\n      }\n    }\n  };\n\n  if (typeof window.Notiflix === 'object') {\n    return commonExtendOptions(true, window.Notiflix, {\n      Confirm: Notiflix.Confirm\n    });\n  } else {\n    return {\n      Confirm: Notiflix.Confirm\n    };\n  }\n});","map":{"version":3,"sources":["/Users/michalratajewski/edupage/files/learning/node_modules/notiflix/build/notiflix-confirm-aio.js"],"names":["root","factory","define","amd","module","exports","Notiflix","global","window","document","notiflixNamespace","notiflixConsoleDocs","defaultFontFamily","typesConfirm","Show","Ask","Prompt","newConfirmSettings","confirmSettings","ID","className","width","zindex","position","distance","backgroundColor","borderRadius","backOverlay","backOverlayColor","rtl","fontFamily","cssAnimation","cssAnimationDuration","cssAnimationStyle","plainText","titleColor","titleFontSize","titleMaxLength","messageColor","messageFontSize","messageMaxLength","buttonsFontSize","buttonsMaxLength","okButtonColor","okButtonBackground","cancelButtonColor","cancelButtonBackground","commonConsoleError","message","console","error","commonCheckHeadOrBody","element","commonSetInternalCSSCodes","getInternalCSSCodes","styleElementId","getElementById","internalCSS","createElement","id","innerHTML","head","appendChild","commonExtendOptions","extended","deep","i","Object","prototype","toString","call","arguments","merge","obj","prop","hasOwnProperty","length","commonGetPlaintext","html","htmlPool","textContent","innerText","confirmGetInternalCSSCodes","confirmCSS","confirmCreate","confirmType","title","messageOrQuestion","answer","okButtonText","cancelButtonText","okButtonCallback","cancelButtonCallback","options","Confirm","init","newConfirmSettingsBackup","Array","isArray","undefined","substring","ntflxConfirmWrap","style","zIndex","padding","setAttribute","classList","add","confirmPosition","trim","confirmOverlay","cancelButtonHTML","setValidationInput","theExpectedAnswer","theClientAnswer","inputMaxLength","Math","ceil","inputDefaultValueAttr","body","confirmCloseWrap","okButton","validationInput","focus","setSelectionRange","value","addEventListener","event","thisValue","target","preventDefault","remove","isEnter","key","toLocaleLowerCase","keyCode","dispatchEvent","Event","inputValue","stopPropagation","returnValue","cancelBubble","timeout","setTimeout","parentNode","removeChild","clearTimeout","cancelButton","userConfirmOptions","userConfirmExtendOptions","show","ask","question","prompt","defaultAnswer"],"mappings":"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","sourcesContent":["/*\n* Notiflix Confirm AIO (https://notiflix.github.io)\n* Description: This file has been created automatically that using \"notiflix.js\", and \"notiflix.css\" files.\n* Version: 3.2.5\n* Author: Furkan MT (https://github.com/furcan)\n* Copyright 2019 - 2022 Notiflix, MIT Licence (https://opensource.org/licenses/MIT)\n*/\n\n/* global define */\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], function () {\n      return factory(root);\n    });\n  } else if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = factory(root);\n  } else {\n    root.Notiflix = factory(root);\n  }\n})(typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : this, function (window) {\n\n  'use strict';\n\n  // COMMON: SSR check: begin\n  if (typeof window === 'undefined' && typeof window.document === 'undefined') {\r\n    return false;\r\n  }\n  // COMMON: SSR check: end\n\n  // COMMON: Variables: begin\n  var notiflixNamespace = 'Notiflix';\r\n  var notiflixConsoleDocs = '\\n\\nVisit documentation page to learn more: https://notiflix.github.io/documentation';\r\n  var defaultFontFamily = '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif';\n  // COMMON: Variables: end\n\n  // CONFIRM: Default Settings: begin\n  var typesConfirm = {\r\n    Show: 'Show',\r\n    Ask: 'Ask',\r\n    Prompt: 'Prompt',\r\n  };\r\n  var newConfirmSettings;\r\n  var confirmSettings = {\r\n    ID: 'NotiflixConfirmWrap', // can not customizable\r\n    className: 'notiflix-confirm',\r\n    width: '300px',\r\n    zindex: 4003,\r\n    position: 'center', // 'center' - 'center-top' - 'center-bottom' - 'right-top' - 'right-center' - 'right-bottom' - 'left-top' - 'left-center' - 'left-bottom'\r\n    distance: '10px',\r\n    backgroundColor: '#f8f8f8',\r\n    borderRadius: '25px',\r\n    backOverlay: true,\r\n    backOverlayColor: 'rgba(0,0,0,0.5)',\r\n    rtl: false,\r\n    fontFamily: 'Quicksand',\r\n    cssAnimation: true,\r\n    cssAnimationDuration: 300,\r\n    cssAnimationStyle: 'fade', // 'zoom' - 'fade'\r\n    plainText: true,\r\n\n    titleColor: '#32c682',\r\n    titleFontSize: '16px',\r\n    titleMaxLength: 34,\r\n\n    messageColor: '#1e1e1e',\r\n    messageFontSize: '14px',\r\n    messageMaxLength: 110,\r\n\n    buttonsFontSize: '15px',\r\n    buttonsMaxLength: 34,\r\n    okButtonColor: '#f8f8f8',\r\n    okButtonBackground: '#32c682',\r\n    cancelButtonColor: '#f8f8f8',\r\n    cancelButtonBackground: '#a9a9a9',\r\n  };\n  // CONFIRM: Default Settings: end\n\n  // COMMON: Console Error: begin\n  var commonConsoleError = function (message) {\r\n    return console.error('%c ' + notiflixNamespace + ' Error ', 'padding:2px;border-radius:20px;color:#fff;background:#ff5549', '\\n' + message + notiflixConsoleDocs);\r\n  };\n  // COMMON: Console Error: end\n\n  // COMMON: Check Head or Body: begin\n  var commonCheckHeadOrBody = function (element) {\r\n    if (!element) { element = 'head'; }\r\n    if (window.document[element] === null) {\r\n      commonConsoleError('\\nNotiflix needs to be appended to the \"<' + element + '>\" element, but you called it before the \"<' + element + '>\" element has been created.');\r\n      return false;\r\n    }\r\n    return true;\r\n  };\n  // COMMON: Check Head or Body: end\n\n  // COMMON: Set Internal CSS Codes: begin\n  var commonSetInternalCSSCodes = function (getInternalCSSCodes, styleElementId) {\r\n    // check doc head\r\n    if (!commonCheckHeadOrBody('head')) { return false; }\r\n\n    // internal css\r\n    if (getInternalCSSCodes() !== null && !window.document.getElementById(styleElementId)) {\r\n      var internalCSS = window.document.createElement('style');\r\n      internalCSS.id = styleElementId;\r\n      internalCSS.innerHTML = getInternalCSSCodes();\r\n      window.document.head.appendChild(internalCSS);\r\n    }\r\n  };\n  // COMMON: Set Internal CSS Codes: end\n\n  // COMMON: Extend Options: begin\n  var commonExtendOptions = function () {\r\n    // variables\r\n    var extended = {};\r\n    var deep = false;\r\n    var i = 0;\r\n    // check if a deep merge\r\n    if (Object.prototype.toString.call(arguments[0]) === '[object Boolean]') {\r\n      deep = arguments[0];\r\n      i++;\r\n    }\r\n    // merge the object into the extended object\r\n    var merge = function (obj) {\r\n      for (var prop in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, prop)) {\r\n          // if property is an object, merge properties\r\n          if (deep && Object.prototype.toString.call(obj[prop]) === '[object Object]') {\r\n            extended[prop] = commonExtendOptions(extended[prop], obj[prop]);\r\n          } else {\r\n            extended[prop] = obj[prop];\r\n          }\r\n        }\r\n      }\r\n    };\r\n    // loop through each object and conduct a merge\r\n    for (; i < arguments.length; i++) {\r\n      merge(arguments[i]);\r\n    }\r\n    return extended;\r\n  };\n  // COMMON: Extend Options: end\n\n  // COMMON: Get Plaintext: begin\n  var commonGetPlaintext = function (html) {\r\n    var htmlPool = window.document.createElement('div');\r\n    htmlPool.innerHTML = html;\r\n    return htmlPool.textContent || htmlPool.innerText || '';\r\n  };\n  // COMMON: Get Plaintext: end\n\n  // CONFIRM: Get Internal CSS Codes: begin\n  var confirmGetInternalCSSCodes = function () {\r\n    var confirmCSS = '[id^=NotiflixConfirmWrap]{position:fixed;z-index:4003;width:100%;height:100%;left:0;top:0;padding:10px;-webkit-box-sizing:border-box;box-sizing:border-box;background:transparent;font-family:\"Quicksand\",-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}[id^=NotiflixConfirmWrap].nx-position-center-top{-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}[id^=NotiflixConfirmWrap].nx-position-center-bottom{-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}[id^=NotiflixConfirmWrap].nx-position-left-top{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}[id^=NotiflixConfirmWrap].nx-position-left-center{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start}[id^=NotiflixConfirmWrap].nx-position-left-bottom{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}[id^=NotiflixConfirmWrap].nx-position-right-top{-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;align-items:flex-end;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}[id^=NotiflixConfirmWrap].nx-position-right-center{-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;align-items:flex-end}[id^=NotiflixConfirmWrap].nx-position-right-bottom{-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;align-items:flex-end;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}[id^=NotiflixConfirmWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixConfirmWrap]>div[class*=\"-overlay\"]{width:100%;height:100%;left:0;top:0;background:rgba(255,255,255,.5);position:fixed;z-index:0}[id^=NotiflixConfirmWrap]>div[class*=\"-overlay\"].nx-with-animation{-webkit-animation:confirm-overlay-animation .3s ease-in-out 0s normal;animation:confirm-overlay-animation .3s ease-in-out 0s normal}@-webkit-keyframes confirm-overlay-animation{0%{opacity:0}100%{opacity:1}}@keyframes confirm-overlay-animation{0%{opacity:0}100%{opacity:1}}[id^=NotiflixConfirmWrap].nx-remove>div[class*=\"-overlay\"].nx-with-animation{opacity:0;-webkit-animation:confirm-overlay-animation-remove .3s ease-in-out 0s normal;animation:confirm-overlay-animation-remove .3s ease-in-out 0s normal}@-webkit-keyframes confirm-overlay-animation-remove{0%{opacity:1}100%{opacity:0}}@keyframes confirm-overlay-animation-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]{width:300px;max-width:100%;max-height:96vh;overflow-x:hidden;overflow-y:auto;border-radius:25px;padding:10px;margin:0;-webkit-filter:drop-shadow(0 0 5px rgba(0,0,0,0.05));filter:drop-shadow(0 0 5px rgba(0, 0, 0, .05));background:#f8f8f8;color:#1e1e1e;position:relative;z-index:1;text-align:center}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]::-webkit-scrollbar{width:0;height:0}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]::-webkit-scrollbar-thumb{background:transparent}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]::-webkit-scrollbar-track{background:transparent}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]{float:left;width:100%;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]>h5{float:left;width:100%;margin:0;padding:0 0 10px;border-bottom:1px solid rgba(0,0,0,.1);color:#32c682;font-family:inherit!important;font-size:16px;line-height:1.4;font-weight:500;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]>div{font-family:inherit!important;margin:15px 0 20px;padding:0 10px;float:left;width:100%;font-size:14px;line-height:1.4;font-weight:normal;color:inherit;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]>div>div{font-family:inherit!important;float:left;width:100%;margin:15px 0 0;padding:0}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]>div>div>input{font-family:inherit!important;float:left;width:100%;height:40px;margin:0;padding:0 15px;border:1px solid rgba(0,0,0,.1);border-radius:25px;font-size:14px;font-weight:normal;line-height:1;-webkit-transition:all .25s ease-in-out;-o-transition:all .25s ease-in-out;transition:all .25s ease-in-out;text-align:left}[id^=NotiflixConfirmWrap].nx-rtl-on>div[class*=\"-content\"]>div[class*=\"-head\"]>div>div>input{text-align:right}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]>div>div>input:hover{border-color:rgba(0,0,0,.1)}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]>div>div>input:focus{border-color:rgba(0,0,0,.3)}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]>div>div>input.nx-validation-failure{border-color:#ff5549}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]>div>div>input.nx-validation-success{border-color:#32c682}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-buttons\"]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;border-radius:inherit;float:left;width:100%;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-buttons\"]>a{cursor:pointer;font-family:inherit!important;-webkit-transition:all .25s ease-in-out;-o-transition:all .25s ease-in-out;transition:all .25s ease-in-out;float:left;width:48%;padding:9px 5px;border-radius:inherit!important;font-weight:500;font-size:15px;line-height:1.4;color:#f8f8f8;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-buttons\"]>a.nx-confirm-button-ok{margin:0 2% 0 0;background:#32c682}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-buttons\"]>a.nx-confirm-button-cancel{margin:0 0 0 2%;background:#a9a9a9}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-buttons\"]>a.nx-full{margin:0;width:100%}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-buttons\"]>a:hover{-webkit-box-shadow:inset 0 -60px 5px -5px rgba(0,0,0,.25);box-shadow:inset 0 -60px 5px -5px rgba(0,0,0,.25)}[id^=NotiflixConfirmWrap].nx-rtl-on>div[class*=\"-content\"]>div[class*=\"-buttons\"],[id^=NotiflixConfirmWrap].nx-rtl-on>div[class*=\"-content\"]>div[class*=\"-buttons\"]>a{-webkit-transform:rotateY(180deg);transform:rotateY(180deg)}[id^=NotiflixConfirmWrap].nx-with-animation.nx-fade>div[class*=\"-content\"]{-webkit-animation:confirm-animation-fade .3s ease-in-out 0s normal;animation:confirm-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes confirm-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixConfirmWrap].nx-with-animation.nx-zoom>div[class*=\"-content\"]{-webkit-animation:confirm-animation-zoom .3s ease-in-out 0s normal;animation:confirm-animation-zoom .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-zoom{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}@keyframes confirm-animation-zoom{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}[id^=NotiflixConfirmWrap].nx-with-animation.nx-fade.nx-remove>div[class*=\"-content\"]{opacity:0;-webkit-animation:confirm-animation-fade-remove .3s ease-in-out 0s normal;animation:confirm-animation-fade-remove .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-fade-remove{0%{opacity:1}100%{opacity:0}}@keyframes confirm-animation-fade-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixConfirmWrap].nx-with-animation.nx-zoom.nx-remove>div[class*=\"-content\"]{opacity:0;-webkit-animation:confirm-animation-zoom-remove .3s ease-in-out 0s normal;animation:confirm-animation-zoom-remove .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-zoom-remove{0%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}50%{opacity:.5;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:0;-webkit-transform:scale(0);transform:scale(0)}}@keyframes confirm-animation-zoom-remove{0%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}50%{opacity:.5;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:0;-webkit-transform:scale(0);transform:scale(0)}}';\r\n    return confirmCSS || null;\r\n  };\n  // CONFIRM: Get Internal CSS Codes: end\n\n  // CONFIRM: Create: begin\n  var confirmCreate = function (confirmType, title, messageOrQuestion, answer, okButtonText, cancelButtonText, okButtonCallback, cancelButtonCallback, options) {\r\n    // check doc body\r\n    if (!commonCheckHeadOrBody('body')) { return false; }\r\n\n    // if not initialized pretend like init\r\n    if (!newConfirmSettings) {\r\n      Notiflix.Confirm.init({});\r\n    }\r\n\n    // create a backup for new settings\r\n    var newConfirmSettingsBackup = commonExtendOptions(true, newConfirmSettings, {});\r\n\n    // check the \"options\": begin\r\n    if (typeof options === 'object' && !Array.isArray(options)) {\r\n      // extend new settings with the new options\r\n      newConfirmSettings = commonExtendOptions(true, newConfirmSettings, options);\r\n    }\r\n    // check the \"options\": end\r\n\n    // check the arguments: begin\r\n    if (typeof title !== 'string') { title = 'Notiflix Confirm'; }\r\n    if (typeof messageOrQuestion !== 'string') { messageOrQuestion = 'Do you agree with me?'; }\r\n    if (typeof okButtonText !== 'string') { okButtonText = 'Yes'; }\r\n    if (typeof cancelButtonText !== 'string') { cancelButtonText = 'No'; }\r\n    if (typeof okButtonCallback !== 'function') { okButtonCallback = undefined; }\r\n    if (typeof cancelButtonCallback !== 'function') { cancelButtonCallback = undefined; }\r\n    // check the arguments: end\r\n\n    // if plainText is true => HTML tags not allowed: begin\r\n    if (newConfirmSettings.plainText) {\r\n      title = commonGetPlaintext(title);\r\n      messageOrQuestion = commonGetPlaintext(messageOrQuestion);\r\n      okButtonText = commonGetPlaintext(okButtonText);\r\n      cancelButtonText = commonGetPlaintext(cancelButtonText);\r\n    }\r\n    // if plainText is true => HTML tags not allowed: end\r\n\n    // if plainText is false but the contents length more than ***MaxLength => Possible HTML tags error: begin\r\n    if (!newConfirmSettings.plainText) {\r\n      if (title.length > newConfirmSettings.titleMaxLength) {\r\n        title = 'Possible HTML Tags Error';\r\n        messageOrQuestion = 'The \"plainText\" option is \"false\" and the title content length is more than \"titleMaxLength\" option.';\r\n        okButtonText = 'Okay';\r\n        cancelButtonText = '...';\r\n      }\r\n      if (messageOrQuestion.length > newConfirmSettings.messageMaxLength) {\r\n        title = 'Possible HTML Tags Error';\r\n        messageOrQuestion = 'The \"plainText\" option is \"false\" and the message content length is more than \"messageMaxLength\" option.';\r\n        okButtonText = 'Okay';\r\n        cancelButtonText = '...';\r\n      }\r\n      if ((okButtonText.length || cancelButtonText.length) > newConfirmSettings.buttonsMaxLength) {\r\n        title = 'Possible HTML Tags Error';\r\n        messageOrQuestion = 'The \"plainText\" option is \"false\" and the buttons content length is more than \"buttonsMaxLength\" option.';\r\n        okButtonText = 'Okay';\r\n        cancelButtonText = '...';\r\n      }\r\n    }\r\n    // if plainText is false but the contents length more than ***MaxLength => Possible HTML tags error: end\r\n\n    // max length: begin\r\n    if (title.length > newConfirmSettings.titleMaxLength) {\r\n      title = title.substring(0, newConfirmSettings.titleMaxLength) + '...';\r\n    }\r\n    if (messageOrQuestion.length > newConfirmSettings.messageMaxLength) {\r\n      messageOrQuestion = messageOrQuestion.substring(0, newConfirmSettings.messageMaxLength) + '...';\r\n    }\r\n    if (okButtonText.length > newConfirmSettings.buttonsMaxLength) {\r\n      okButtonText = okButtonText.substring(0, newConfirmSettings.buttonsMaxLength) + '...';\r\n    }\r\n    if (cancelButtonText.length > newConfirmSettings.buttonsMaxLength) {\r\n      cancelButtonText = cancelButtonText.substring(0, newConfirmSettings.buttonsMaxLength) + '...';\r\n    }\r\n    // max length: end\r\n\n    // if cssAnimaion is false => duration: begin\r\n    if (!newConfirmSettings.cssAnimation) {\r\n      newConfirmSettings.cssAnimationDuration = 0;\r\n    }\r\n    // if cssAnimaion is false => duration: end\r\n\n    // confirm wrap: begin\r\n    var ntflxConfirmWrap = window.document.createElement('div');\r\n    ntflxConfirmWrap.id = confirmSettings.ID;\r\n    ntflxConfirmWrap.className = newConfirmSettings.className + (newConfirmSettings.cssAnimation ? ' nx-with-animation nx-' + newConfirmSettings.cssAnimationStyle : '');\r\n    ntflxConfirmWrap.style.zIndex = newConfirmSettings.zindex;\r\n    ntflxConfirmWrap.style.padding = newConfirmSettings.distance;\r\n\n    // rtl: begin\r\n    if (newConfirmSettings.rtl) {\r\n      ntflxConfirmWrap.setAttribute('dir', 'rtl');\r\n      ntflxConfirmWrap.classList.add('nx-rtl-on');\r\n    }\r\n    // rtl: end\r\n\n    // position: begin\r\n    var confirmPosition = typeof newConfirmSettings.position === 'string' ? newConfirmSettings.position.trim() : 'center';\r\n    ntflxConfirmWrap.classList.add('nx-position-' + confirmPosition);\r\n    // position: end\r\n\n    // font-family\r\n    ntflxConfirmWrap.style.fontFamily = '\"' + newConfirmSettings.fontFamily + '\", ' + defaultFontFamily;\r\n\n    // if background overlay is true: begin\r\n    var confirmOverlay = '';\r\n    if (newConfirmSettings.backOverlay) {\r\n      confirmOverlay = '<div class=\"' + newConfirmSettings.className + '-overlay' + (newConfirmSettings.cssAnimation ? ' nx-with-animation' : '') + '\" style=\"background:' + newConfirmSettings.backOverlayColor + ';animation-duration:' + newConfirmSettings.cssAnimationDuration + 'ms;\"></div>';\r\n    }\r\n    // if background overlay is true: end\r\n\n    // if have a callback => add cancel button: begin\r\n    var cancelButtonHTML = '';\r\n    if (typeof okButtonCallback === 'function') {\r\n      cancelButtonHTML = '<a id=\"NXConfirmButtonCancel\" class=\"nx-confirm-button-cancel\" style=\"color:' + newConfirmSettings.cancelButtonColor + ';background:' + newConfirmSettings.cancelButtonBackground + ';font-size:' + newConfirmSettings.buttonsFontSize + ';\">' + cancelButtonText + '</a>';\r\n    }\r\n    // if have a callback => add cancel button: end\r\n\n    // check the validation module: begin\r\n    var setValidationInput = '';\r\n    var theExpectedAnswer = null;\r\n    var theClientAnswer = undefined;\r\n    if (confirmType === typesConfirm.Ask || confirmType === typesConfirm.Prompt) {\r\n      theExpectedAnswer = answer || '';\r\n      var inputMaxLength = (confirmType === typesConfirm.Ask) ? Math.ceil(theExpectedAnswer.length * 1.5) : (theExpectedAnswer.length > 200 ? Math.ceil(theExpectedAnswer.length * 1.5) : 250);\r\n      var inputDefaultValueAttr = confirmType === typesConfirm.Prompt ? ('value=\"' + theExpectedAnswer + '\"') : '';\r\n      setValidationInput = '<div><input id=\"NXConfirmValidationInput\" type=\"text\" ' + inputDefaultValueAttr + ' maxlength=\"' + inputMaxLength + '\" style=\"font-size:' + newConfirmSettings.messageFontSize + ';border-radius: ' + newConfirmSettings.borderRadius + ';\" autocomplete=\"off\" spellcheck=\"false\" autocapitalize=\"none\" /></div>';\r\n    }\r\n    // check the validation module: end\r\n\n    // confirm wrap content: begin\r\n    ntflxConfirmWrap.innerHTML = confirmOverlay +\r\n      '<div class=\"' + newConfirmSettings.className + '-content\" style=\"width:' + newConfirmSettings.width + '; background:' + newConfirmSettings.backgroundColor + '; animation-duration:' + newConfirmSettings.cssAnimationDuration + 'ms; border-radius: ' + newConfirmSettings.borderRadius + ';\">' +\r\n      '<div class=\"' + newConfirmSettings.className + '-head\">' +\r\n      '<h5 style=\"color:' + newConfirmSettings.titleColor + ';font-size:' + newConfirmSettings.titleFontSize + ';\">' + title + '</h5>' +\r\n      '<div style=\"color:' + newConfirmSettings.messageColor + ';font-size:' + newConfirmSettings.messageFontSize + ';\">' + messageOrQuestion + setValidationInput + '</div>' +\r\n      '</div>' +\r\n      '<div class=\"' + newConfirmSettings.className + '-buttons\">' +\r\n      '<a id=\"NXConfirmButtonOk\" class=\"nx-confirm-button-ok' + (typeof okButtonCallback === 'function' ? '' : ' nx-full') + '\" style=\"color:' + newConfirmSettings.okButtonColor + ';background:' + newConfirmSettings.okButtonBackground + ';font-size:' + newConfirmSettings.buttonsFontSize + ';\">' + okButtonText + '</a>' +\r\n      cancelButtonHTML +\r\n      '</div>' +\r\n      '</div>';\r\n    // confirm wrap content: end\r\n    // confirm wrap: end\r\n\n    // if there is no confirm box: begin\r\n    if (!window.document.getElementById(ntflxConfirmWrap.id)) {\r\n      window.document.body.appendChild(ntflxConfirmWrap);\r\n\n      // buttons && input listener: begin\r\n      var confirmCloseWrap = window.document.getElementById(ntflxConfirmWrap.id);\r\n      var okButton = window.document.getElementById('NXConfirmButtonOk');\r\n\n      // validation input listener: begin\r\n      var validationInput = window.document.getElementById('NXConfirmValidationInput');\r\n      if (validationInput) {\r\n        validationInput.focus();\r\n        validationInput.setSelectionRange(0, (validationInput.value || '').length);\r\n        validationInput.addEventListener('keyup', function (event) {\r\n          var thisValue = event.target.value;\r\n          if (\r\n            (confirmType === typesConfirm.Ask) &&\r\n            (thisValue !== theExpectedAnswer)\r\n          ) {\r\n            event.preventDefault();\r\n            validationInput.classList.add('nx-validation-failure');\r\n            validationInput.classList.remove('nx-validation-success');\r\n          } else {\r\n            if (confirmType === typesConfirm.Ask) {\r\n              validationInput.classList.remove('nx-validation-failure');\r\n              validationInput.classList.add('nx-validation-success');\r\n            }\r\n            var isEnter = (event.key || '').toLocaleLowerCase('en') === 'enter' || event.keyCode === 13;\r\n            if (isEnter) {\r\n              okButton.dispatchEvent(new Event('click'));\r\n            }\r\n          }\r\n        });\r\n      }\r\n      // validation input listener: end\r\n\n      // ok button listener: begin\r\n      okButton.addEventListener('click', function (event) {\r\n        // check the answer if the type is \"Ask\": begin\r\n        if (confirmType === typesConfirm.Ask && theExpectedAnswer && validationInput) {\r\n          var inputValue = (validationInput.value || '').toString();\r\n          if (inputValue !== theExpectedAnswer) {\r\n            validationInput.focus();\r\n            validationInput.classList.add('nx-validation-failure');\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            event.returnValue = false;\r\n            event.cancelBubble = true;\r\n            return false;\r\n          } else {\r\n            validationInput.classList.remove('nx-validation-failure');\r\n          }\r\n        }\r\n        // check the answer if the type is \"Ask\": end\r\n\n        // if ok callback && if ok callback is a function\r\n        if (typeof okButtonCallback === 'function') {\r\n          if (confirmType === typesConfirm.Prompt && validationInput) {\r\n            theClientAnswer = validationInput.value || '';\r\n          }\r\n          okButtonCallback(theClientAnswer);\r\n        }\r\n        confirmCloseWrap.classList.add('nx-remove');\r\n\n        var timeout = setTimeout(function () {\r\n          if (confirmCloseWrap.parentNode !== null) {\r\n            confirmCloseWrap.parentNode.removeChild(confirmCloseWrap);\r\n            clearTimeout(timeout);\r\n          }\r\n        }, newConfirmSettings.cssAnimationDuration);\r\n      });\r\n      // ok button listener: end\r\n\n      // if ok callback && if ok callback a function => add Cancel Button listener: begin\r\n      if (typeof okButtonCallback === 'function') {\r\n        // cancel button listener: begin\r\n        var cancelButton = window.document.getElementById('NXConfirmButtonCancel');\r\n        cancelButton.addEventListener('click', function () {\r\n          // if cancel callback && if cancel callback a function\r\n          if (typeof cancelButtonCallback === 'function') {\r\n            if (confirmType === typesConfirm.Prompt && validationInput) {\r\n              theClientAnswer = validationInput.value || '';\r\n            }\r\n            cancelButtonCallback(theClientAnswer);\r\n          }\r\n          confirmCloseWrap.classList.add('nx-remove');\r\n\n          var timeout = setTimeout(function () {\r\n            if (confirmCloseWrap.parentNode !== null) {\r\n              confirmCloseWrap.parentNode.removeChild(confirmCloseWrap);\r\n              clearTimeout(timeout);\r\n            }\r\n          }, newConfirmSettings.cssAnimationDuration);\r\n        });\r\n        // cancel button listener: end\r\n      }\r\n      // if ok callback && if ok callback a function => add Cancel Button listener: end\r\n      // buttons && input listener: end\r\n    }\r\n    // if there is no confirm box: end\r\n\n    // extend new settings with the backup settings\r\n    newConfirmSettings = commonExtendOptions(true, newConfirmSettings, newConfirmSettingsBackup);\r\n  };\n  // CONFIRM: Create: end\n\n  var Notiflix = {\n    Confirm: {\r\n      // Init\r\n      init: function (userConfirmOptions) {\r\n        // extend options\r\n        newConfirmSettings = commonExtendOptions(true, confirmSettings, userConfirmOptions);\r\n        // internal css if exist\r\n        commonSetInternalCSSCodes(confirmGetInternalCSSCodes, 'NotiflixConfirmInternalCSS');\r\n      },\r\n      // Merge First Init\r\n      merge: function (userConfirmExtendOptions) {\r\n        // if initialized already\r\n        if (newConfirmSettings) {\r\n          newConfirmSettings = commonExtendOptions(true, newConfirmSettings, userConfirmExtendOptions);\r\n        }\r\n        // initialize first\r\n        else {\r\n          commonConsoleError('You have to initialize the Confirm module before call Merge function.');\r\n          return false;\r\n        }\r\n      },\r\n      // Show\r\n      show: function (title, message, okButtonText, cancelButtonText, okButtonCallback, cancelButtonCallback, options) {\r\n        confirmCreate(typesConfirm.Show, title, message, null, okButtonText, cancelButtonText, okButtonCallback, cancelButtonCallback, options);\r\n      },\r\n      // Ask\r\n      ask: function (title, question, answer, okButtonText, cancelButtonText, okButtonCallback, cancelButtonCallback, options) {\r\n        confirmCreate(typesConfirm.Ask, title, question, answer, okButtonText, cancelButtonText, okButtonCallback, cancelButtonCallback, options);\r\n      },\r\n      // Prompt\r\n      prompt: function (title, question, defaultAnswer, okButtonText, cancelButtonText, okButtonCallback, cancelButtonCallback, options) {\r\n        confirmCreate(typesConfirm.Prompt, title, question, defaultAnswer, okButtonText, cancelButtonText, okButtonCallback, cancelButtonCallback, options);\r\n      },\r\n    },\n  };\n\n  if (typeof window.Notiflix === 'object') {\n    return commonExtendOptions(true, window.Notiflix, { Confirm: Notiflix.Confirm });\n  } else {\n    return { Confirm: Notiflix.Confirm };\n  }\n\n});"]},"metadata":{},"sourceType":"script"}