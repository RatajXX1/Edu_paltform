{"ast":null,"code":"import _classCallCheck from\"/Users/michalratajewski/edupage/files/learning/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/michalratajewski/edupage/files/learning/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/Users/michalratajewski/edupage/files/learning/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/michalratajewski/edupage/files/learning/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React,{useState}from\"react\";import{Route,Navigate}from\"react-router-dom\";import authorize from\"./authorize\";import{jsx as _jsx}from\"react/jsx-runtime\";export var ProtectedRoute=/*#__PURE__*/function(_React$Component){_inherits(ProtectedRoute,_React$Component);var _super=_createSuper(ProtectedRoute);function ProtectedRoute(props){var _this;_classCallCheck(this,ProtectedRoute);_this=_super.call(this,props);_this.state={Logged:false,user_data:null,checked:false};return _this;}_createClass(ProtectedRoute,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;authorize.CheckAuthorize().then(function(data){if(data!==null)_this2.setState({Logged:true,user_data:data,checked:true});else _this2.setState({Logged:false,user_data:null,checked:true});}).catch(function(){_this2.setState({Logged:false,user_data:null,checked:true});});}},{key:\"render\",value:function render(){if(this.state.checked){if(this.state.Logged){return/*#__PURE__*/React.cloneElement(this.props.children,{User_data:this.state.user_data,history:this.props.history});}else return/*#__PURE__*/_jsx(Navigate,{replace:true,to:'/'});}else return/*#__PURE__*/_jsx(\"h1\",{children:\"Autoryzacja w toku\"});}}]);return ProtectedRoute;}(React.Component);","map":{"version":3,"sources":["/Users/michalratajewski/edupage/files/learning/src/utilis/ProtectedRoute.js"],"names":["React","useState","Route","Navigate","authorize","ProtectedRoute","props","state","Logged","user_data","checked","CheckAuthorize","then","data","setState","catch","cloneElement","children","User_data","history","Component"],"mappings":"ggBAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,OAAQC,KAAR,CAAeC,QAAf,KAA8B,kBAA9B,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,C,2CAEA,UAAaC,CAAAA,cAAb,4HAEI,wBAAYC,KAAZ,CAAmB,gDACf,uBAAMA,KAAN,EAEA,MAAKC,KAAL,CAAa,CACTC,MAAM,CAAE,KADC,CAETC,SAAS,CAAE,IAFF,CAGTC,OAAO,CAAE,KAHA,CAAb,CAHe,aAQlB,CAVL,4DAYI,4BAAoB,iBAChBN,SAAS,CAACO,cAAV,GAA2BC,IAA3B,CACI,SAAAC,IAAI,CAAI,CACJ,GAAIA,IAAI,GAAK,IAAb,CAAmB,MAAI,CAACC,QAAL,CAAc,CAACN,MAAM,CAAE,IAAT,CAAeC,SAAS,CAAEI,IAA1B,CAAgCH,OAAO,CAAE,IAAzC,CAAd,EAAnB,IACK,CAAA,MAAI,CAACI,QAAL,CAAc,CAACN,MAAM,CAAE,KAAT,CAAgBC,SAAS,CAAE,IAA3B,CAAiCC,OAAO,CAAE,IAA1C,CAAd,EACR,CAJL,EAKEK,KALF,CAKQ,UAAM,CACV,MAAI,CAACD,QAAL,CAAc,CAACN,MAAM,CAAE,KAAT,CAAgBC,SAAS,CAAE,IAA3B,CAAiCC,OAAO,CAAE,IAA1C,CAAd,EACH,CAPD,EAQH,CArBL,sBAuBI,iBAAS,CACL,GAAI,KAAKH,KAAL,CAAWG,OAAf,CAAwB,CACpB,GAAI,KAAKH,KAAL,CAAWC,MAAf,CAAuB,CACnB,mBAAQR,KAAK,CAACgB,YAAN,CAAmB,KAAKV,KAAL,CAAWW,QAA9B,CAAwC,CAACC,SAAS,CAAG,KAAKX,KAAL,CAAWE,SAAxB,CAAmCU,OAAO,CAAE,KAAKb,KAAL,CAAWa,OAAvD,CAAxC,CAAR,CACH,CAFD,IAEO,oBAAQ,KAAC,QAAD,EAAU,OAAO,KAAjB,CAAkB,EAAE,CAAE,GAAtB,EAAR,CACV,CAJD,IAIO,oBAAQ,0CAAR,CACV,CA7BL,4BAAoCnB,KAAK,CAACoB,SAA1C","sourcesContent":["import React, {useState} from \"react\";\nimport {Route, Navigate} from \"react-router-dom\";\nimport authorize from \"./authorize\";\n\nexport class ProtectedRoute extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            Logged: false,\n            user_data: null,\n            checked: false\n        }\n    }\n\n    componentDidMount() {\n        authorize.CheckAuthorize().then(\n            data => {\n                if (data !== null) this.setState({Logged: true, user_data: data, checked: true})\n                else this.setState({Logged: false, user_data: null, checked: true})\n            }\n        ).catch(() => {\n            this.setState({Logged: false, user_data: null, checked: true})\n        })\n    }\n\n    render() {\n        if (this.state.checked) {\n            if (this.state.Logged) {\n                return (React.cloneElement(this.props.children, {User_data : this.state.user_data, history: this.props.history}))\n            } else return (<Navigate replace to={'/'}/>)\n        } else return (<h1>Autoryzacja w toku</h1>)\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}